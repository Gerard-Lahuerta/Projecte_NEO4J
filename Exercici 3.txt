Codi utilitzat per a fer l'analisi de grafs del exercici 3. Les conclusions i analisis extrets d'ells es troben a la memória de treball

Exercici 3.a

- Creació del graf:
CALL gds.graph.project('ex3a',['Individu','Habitatge'], ['VIU_A','SAME_AS','Relacio_Familiar'])

- Taula agrupant els resultats segons la mida de la cc.
CALL gds . wcc . stream ( ’ ex3a ’ ) YIELD componentId , nodeId WITH componentId , size ( collect ( nodeId ) )
AS mida , collect ( nodeId ) AS nodes ORDER BY mida DESC RETURN componentId , mida

- Per cada municipi i any el nombre de parelles del tipus: (Individu)—(Habitatge).
CALL gds . wcc . stream ( ’ ex3a ’ ) YIELD componentId , nodeId WITH componentId , size ( collect ( nodeId ) ) AS mida ,
collect ( nodeId ) AS nodes ORDER BY mida DESC MATCH(m: Individu ) −[ rel :VIU_A]−> ( n : Habitatge )
WHERE i d ( n ) IN nodes return n.Municipi as municipi , n.AnyPadro as Any, count ( rel ) as num_relacions

- Distribució de tipus de nodes (Individu o Habitatge) segons la mida de la cc.
CALL gds.wcc.stream('ex3a')
YIELD componentId, nodeId
WITH componentId, size(collect(nodeId)) AS mida, collect(nodeId) AS nodes ORDER BY mida DESC 
MATCH(n:Individu) WHERE id(n) IN nodes
RETURN componentId, mida, round(count(n)* 1.0/mida,2) as num_ind, round((mida-count(n))* 1.0/mida,2) as num_hab

- Quantes components connexes no estan connectades a cap node de tipus ‘Habitatge’.
CALL gds.wcc.stream('ex3a')
    YIELD componentId, nodeId
    WITH componentId as totalCC, 
         componentId, 
         size(collect(nodeId)) AS mida, 
         collect(nodeId) AS nodes
    MATCH(h:Habitatge) 
    WHERE id(h) in nodes
    WITH componentId, nodes, totalCC
    return count(totalCC)-count(distinct componentId) as CCNotConnected


Exercici 3.b

- Determineu els habitatges que són els mateixos al llarg dels anys. Afegiu una aresta amb nom “MATEIX_HAB“ entre aquests habitatges.
Per evitar arestes duplicades feu que la aresta apunti al habitatge amb any de padró més petit.

MATCH ( h1 : Habitatge ) , ( h2 : Habitatge )
WHERE h1 <> h2 AND h1.LlarID = h2.LlarID
AND h1.Municipi  = h2.Municipi
AND h1.AnyPadro < h2.AnyPadro
MERGE ( h1 ) < −[:MATEIX_HAB] −( h2 )

- Creeu un graf en memòria que inclogui els nodes Individu i Habitatge i les relacions VIU, FAMILIA, MATEIX_HAB que acabeu de crear.

CALL gds.graph.project ( 'ex3b' , [ 'Individu' , 'Habitatge' ] ,
[ 'VIU_A , 'MATEIX_HAB' , 'Relacio_Familiar' ] )

- Calculeu la similaritat entre els nodes del graf que acabeu de crear, escriviu el
resultat de nou a la base de dades i interpreteu els resultats obtinguts.
    
CALL gds.nodeSimilarity.write('ex3b',{
writeRelationshipType:'SIMILAR',
writeProperty:'score',
similarityCutoff:1.0,
degreeCutoff: 2})
YIELD nodesCompared, relationshipsWritten

match (i:Individu)-[r:SIMILAR]->(p:Individu)
return r.score, i.IndividuID, p.IndividuID

